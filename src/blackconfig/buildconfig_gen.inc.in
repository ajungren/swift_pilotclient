/* Copyright (C) 2018
 * swift project Community / Contributors
 *
 * This file is part of swift project. It is subject to the license terms in the LICENSE file found in the top-level
 * directory of this distribution and at http://www.swift-project.org/license.html. No part of swift project,
 * including this file, may be copied, modified, propagated, or distributed except according to the terms
 * contained in the LICENSE file.
 */

#ifndef IN_BUILDCONFIG_H
#error This file is only to be included by buildconfig.inc
#endif

constexpr bool BlackConfig::CBuildConfig::isCompiledWithBlackCore()
{
!!IF swiftConfig(libs.blackcore)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithBlackSound()
{
!!IF swiftConfig(libs.blacksound)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithBlackInput()
{
!!IF swiftConfig(libs.blackinput)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithFs9Support()
{
!!IF swiftConfig(sims.fs9)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithP3DSupport()
{
!!IF swiftConfig(sims.p3d)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithFsxSupport()
{
!!IF swiftConfig(sims.fsx)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithMsFlightSimulatorSupport()
{
!!IF swiftConfig(sims.msfs)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithFsuipcSupport()
{
!!IF swiftConfig(sims.fsuipc)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithXPlaneSupport()
{
!!IF swiftConfig(sims.xplane)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithFGSupport()
{
!!IF swiftConfig(sims.fg)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isCompiledWithGui()
{
!!IF swiftConfig(libs.blackgui)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr bool BlackConfig::CBuildConfig::isVatsimVersion()
{
!!IF swiftConfig(vatsimSupport)
    return true;
!!ELSE
    return false;
!!ENDIF
}

constexpr int BlackConfig::CBuildConfig::versionMajor() { return $$swiftConfig(version.major); }
constexpr int BlackConfig::CBuildConfig::versionMinor() { return $$swiftConfig(version.minor); }
